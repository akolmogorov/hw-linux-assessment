<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_hw__aht10__get__temp_8c_source" xml:lang="en-US">
<title>hw_aht10_get_temp.c</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_hw__aht10__get__temp_8c_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&lt;unistd.h&gt;</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;fcntl.h&gt;</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;sys/ioctl.h&gt;</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00006"/>00006 <emphasis role="preprocessor">#include&#32;&lt;pthread.h&gt;</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&lt;linux/i2c-dev.h&gt;</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00008"/>00008 
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00009"/>00009 <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_hw__aht10__get__temp_8c_1a0510c487d3f24e3ccef0cd345cede814">validate_inputs</link>(<emphasis role="keywordtype">int</emphasis>,&#32;<emphasis role="keywordtype">char</emphasis>&#32;**);
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00010"/>00010 <emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_hw__aht10__get__temp_8c_1a5f2a7ec4d5a65c3cebddf744da3d4bc2">get_temperature_celsius</link>(<emphasis role="keywordtype">char</emphasis>&#32;*,&#32;<emphasis role="keywordtype">int</emphasis>);
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00011"/>00011 
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00012"/><link linkend="_hw__aht10__get__temp_8c_1a3c04138a5bfe5d72780bb7e82a18e627">00012</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_hw__aht10__get__temp_8c_1a3c04138a5bfe5d72780bb7e82a18e627">main</link>(<emphasis role="keywordtype">int</emphasis>&#32;argc,&#32;<emphasis role="keywordtype">char</emphasis>&#32;**argv)&#32;{
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="comment">/*char&#32;*device_name&#32;=&#32;(char*)&quot;/dev/i2c-1&quot;;</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00014"/>00014 <emphasis role="comment">&#32;&#32;&#32;&#32;int&#32;dev_addr&#32;=&#32;0x38;*/</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;<link linkend="_hw__aht10__get__temp_8c_1a0510c487d3f24e3ccef0cd345cede814">validate_inputs</link>(argc,&#32;argv)&#32;==&#32;1)&#32;{
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00016"/>00016 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*device_name&#32;=&#32;argv[1];
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;dev_addr&#32;=&#32;(int)strtol(argv[2],&#32;NULL,&#32;16);
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00018"/>00018 &#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;%0.2f\n&quot;</emphasis>,&#32;<link linkend="_hw__aht10__get__temp_8c_1a5f2a7ec4d5a65c3cebddf744da3d4bc2">get_temperature_celsius</link>(device_name,&#32;dev_addr));
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00019"/>00019 &#32;&#32;&#32;&#32;}
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;\n&#32;Usage:&#32;%s&#32;device_name&#32;device&#32;address\n\n&quot;</emphasis>,&#32;argv[0]);
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00022"/>00022 &#32;&#32;&#32;&#32;}
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00023"/>00023 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00024"/>00024 }
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00025"/>00025 
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00026"/><link linkend="_hw__aht10__get__temp_8c_1a0510c487d3f24e3ccef0cd345cede814">00026</link> <emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_hw__aht10__get__temp_8c_1a0510c487d3f24e3ccef0cd345cede814">validate_inputs</link>(<emphasis role="keywordtype">int</emphasis>&#32;argc,&#32;<emphasis role="keywordtype">char</emphasis>&#32;**argv)&#32;{
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;*cp,&#32;*program_name&#32;=&#32;argv[0];
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00028"/>00028 
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00029"/>00029 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;skip&#32;over&#32;program&#32;name</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00030"/>00030 &#32;&#32;&#32;&#32;--argc;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00031"/>00031 &#32;&#32;&#32;&#32;++argv;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00032"/>00032 
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(argc&#32;&lt;&#32;2)&#32;{
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,<emphasis role="stringliteral">&quot;\n&#32;%s:&#32;not&#32;(all)&#32;arguments&#32;specified\n&quot;</emphasis>,&#32;program_name);
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00036"/>00036 &#32;&#32;&#32;&#32;}
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00037"/>00037 
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00038"/>00038 &#32;&#32;&#32;&#32;cp&#32;=&#32;*argv;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00039"/>00039 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(*cp&#32;==&#32;0)&#32;{
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fprintf(stderr,<emphasis role="stringliteral">&quot;\n&#32;%s:&#32;argument&#32;an&#32;empty&#32;string\n&quot;</emphasis>,&#32;program_name);
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00042"/>00042 &#32;&#32;&#32;&#32;}
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00043"/>00043 
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;1;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00045"/>00045 }
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00046"/>00046 
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00047"/><link linkend="_hw__aht10__get__temp_8c_1a5f2a7ec4d5a65c3cebddf744da3d4bc2">00047</link> <emphasis role="keywordtype">float</emphasis>&#32;<link linkend="_hw__aht10__get__temp_8c_1a5f2a7ec4d5a65c3cebddf744da3d4bc2">get_temperature_celsius</link>(<emphasis role="keywordtype">char</emphasis>&#32;*device_name,&#32;<emphasis role="keywordtype">int</emphasis>&#32;dev_addr)&#32;{
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;data[6]&#32;=&#32;{0};
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i2c_handler,&#32;length,&#32;comp_temp;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;temperature_celsius;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00051"/>00051 
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Get&#32;I2C&#32;handler&#32;*/</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00053"/>00053 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((i2c_handler&#32;=&#32;open(device_name,&#32;O_RDWR))&#32;&lt;&#32;0)
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00054"/>00054 &#32;&#32;&#32;&#32;{
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Error&#32;getting&#32;the&#32;file&#32;descriptor&#32;from&#32;device&#32;*/</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Unable&#32;to&#32;open&#32;I2C&#32;device&quot;</emphasis>);
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00058"/>00058 &#32;&#32;&#32;&#32;}
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Calling&#32;kernel&#32;layer&#32;from&#32;user&#32;space&#32;to&#32;connect&#32;with&#32;I2C&#32;device&#32;*/</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(ioctl(i2c_handler,&#32;I2C_SLAVE,&#32;dev_addr)&#32;&lt;&#32;0)
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00061"/>00061 &#32;&#32;&#32;&#32;{
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Bus&#32;access&#32;failed&#32;*/</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Unable&#32;to&#32;connect&#32;to&#32;low-level&#32;device&#32;I2C.\n&quot;</emphasis>);
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;-1;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00065"/>00065 &#32;&#32;&#32;&#32;}
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00066"/>00066 
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Handshake&#32;(initialization&#32;command)&#32;according&#32;AHT10&#32;sensor&#32;datasheet&#32;*/</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00068"/>00068 &#32;&#32;&#32;&#32;data[0]&#32;=&#32;0xE1;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00069"/>00069 &#32;&#32;&#32;&#32;data[1]&#32;=&#32;0x08;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00070"/>00070 &#32;&#32;&#32;&#32;data[2]&#32;=&#32;0x00;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00071"/>00071 &#32;&#32;&#32;&#32;length&#32;=&#32;3;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00072"/>00072 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Send&#32;initialization&#32;command&#32;to&#32;I2C&#32;device&#32;*/</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(write(i2c_handler,&#32;data,&#32;length)&#32;!=&#32;length)
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00074"/>00074 &#32;&#32;&#32;&#32;{
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Unable&#32;to&#32;handshake&#32;with&#32;i2c&#32;device&#32;*/</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Unable&#32;to&#32;handshake&#32;the&#32;i2c&#32;bus.\n&quot;</emphasis>);
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00077"/>00077 &#32;&#32;&#32;&#32;}
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00078"/>00078 
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Wait&#32;20ms&#32;before&#32;proceeding&#32;with&#32;the&#32;next&#32;write&#32;command&#32;*/</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00080"/>00080 &#32;&#32;&#32;&#32;sleep(0.02);
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00081"/>00081 
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Trigger&#32;measurement&#32;(request&#32;command)&#32;acc.&#32;AHT10&#32;sensor&#32;datasheet&#32;*/</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00083"/>00083 &#32;&#32;&#32;&#32;data[0]&#32;=&#32;0xAC;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00084"/>00084 &#32;&#32;&#32;&#32;data[1]&#32;=&#32;0x33;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00085"/>00085 &#32;&#32;&#32;&#32;data[2]&#32;=&#32;0x00;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00086"/>00086 &#32;&#32;&#32;&#32;length&#32;=&#32;3;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Send&#32;trigger&#32;measurement&#32;command&#32;to&#32;I2C&#32;device&#32;*/</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(write(i2c_handler,&#32;data,&#32;length)&#32;!=&#32;length)
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00089"/>00089 &#32;&#32;&#32;&#32;{
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Unable&#32;to&#32;request&#32;data&#32;from&#32;I2C&#32;device&#32;*/</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Unable&#32;to&#32;request&#32;data&#32;from&#32;the&#32;I2C&#32;bus.\n&quot;</emphasis>);
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00092"/>00092 &#32;&#32;&#32;&#32;}
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00093"/>00093 
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Wait&#32;20ms&#32;before&#32;proceeding&#32;with&#32;the&#32;next&#32;read&#32;command&#32;*/</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00095"/>00095 &#32;&#32;&#32;&#32;sleep(0.02);
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00096"/>00096 
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00097"/>00097 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Read&#32;the&#32;6&#32;bytes&#32;answer&#32;from&#32;I2C&#32;*/</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00098"/>00098 &#32;&#32;&#32;&#32;length&#32;=&#32;6;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00099"/>00099 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(read(i2c_handler,&#32;data,&#32;length)&#32;!=&#32;length)
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00100"/>00100 &#32;&#32;&#32;&#32;{
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Unable&#32;to&#32;get&#32;data&#32;from&#32;I2C&#32;device&#32;*/</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;Unable&#32;to&#32;read&#32;output&#32;temp.&#32;from&#32;the&#32;i2c&#32;AHT10&#32;sensor.\n&quot;</emphasis>);
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00103"/>00103 &#32;&#32;&#32;&#32;}
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00105"/>00105 &#32;&#32;&#32;&#32;{
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;comp_temp&#32;=&#32;((data[3]&#32;&amp;&#32;0x0F)&#32;&lt;&lt;&#32;16)&#32;|&#32;(data[4]&#32;&lt;&lt;&#32;8)&#32;|&#32;data[5];
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temperature_celsius&#32;=&#32;((comp_temp*200.0)/1048576)&#32;-50.0;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00108"/>00108 &#32;&#32;&#32;&#32;}
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00109"/>00109 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;temperature_celsius;
<anchor xml:id="_hw__aht10__get__temp_8c_source_1l00110"/>00110 }
</programlisting></section>
